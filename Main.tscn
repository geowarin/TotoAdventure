[gd_scene load_steps=20 format=2]

[ext_resource path="res://Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://addons/zylann.hterrain/hterrain_texture_set.gd" type="Script" id=2]
[ext_resource path="res://terrain_data/data.hterrain" type="Resource" id=3]
[ext_resource path="res://addons/zylann.hterrain/hterrain.gd" type="Script" id=4]
[ext_resource path="res://terrain_textures/Main_slot1_albedo_bump.packed_tex" type="Texture" id=5]
[ext_resource path="res://terrain_textures/Main_slot1_normal_roughness.packed_tex" type="Texture" id=6]
[ext_resource path="res://terrain_textures/Main_slot0_albedo_bump.packed_tex" type="Texture" id=7]
[ext_resource path="res://terrain_textures/Main_slot3_normal_roughness.packed_tex" type="Texture" id=8]
[ext_resource path="res://terrain_textures/Main_slot2_normal_roughness.packed_tex" type="Texture" id=9]
[ext_resource path="res://terrain_textures/Main_slot2_albedo_bump.packed_tex" type="Texture" id=10]
[ext_resource path="res://terrain_textures/Main_slot0_normal_roughness.packed_tex" type="Texture" id=11]
[ext_resource path="res://terrain_textures/Main_slot3_albedo_bump.packed_tex" type="Texture" id=12]
[ext_resource path="res://assets/textures/grass.png" type="Texture" id=13]
[ext_resource path="res://addons/zylann.hterrain/hterrain_detail_layer.gd" type="Script" id=14]
[ext_resource path="res://addons/zylann.hterrain/tools/icons/icon_detail_layer_node.svg" type="Texture" id=15]
[ext_resource path="res://addons/zylann.scatter/scatter3d.gd" type="Script" id=16]
[ext_resource path="res://props/BirchTree_1.tscn" type="PackedScene" id=17]

[sub_resource type="Resource" id=4]
script = ExtResource( 2 )
mode = 0
textures = [ [ ExtResource( 7 ), ExtResource( 5 ), ExtResource( 10 ), ExtResource( 12 ) ], [ ExtResource( 11 ), ExtResource( 6 ), ExtResource( 9 ), ExtResource( 8 ) ] ]

[sub_resource type="Shader" id=5]
code = "shader_type spatial;
render_mode cull_disabled;

uniform sampler2D u_terrain_heightmap;
uniform sampler2D u_terrain_detailmap;
uniform sampler2D u_terrain_normalmap;
uniform sampler2D u_terrain_globalmap : hint_albedo;
uniform mat4 u_terrain_inverse_transform;
uniform mat3 u_terrain_normal_basis;

uniform sampler2D u_albedo_alpha : hint_albedo;
uniform float u_view_distance = 100.0;
uniform float u_globalmap_tint_bottom : hint_range(0.0, 1.0);
uniform float u_globalmap_tint_top : hint_range(0.0, 1.0);
uniform float u_bottom_ao : hint_range(0.0, 1.0);
uniform vec2 u_ambient_wind; // x: amplitude, y: time
uniform vec3 u_instance_scale = vec3(1.0, 1.0, 1.0);

varying vec3 v_normal;
varying vec2 v_map_uv;

float get_hash(vec2 c) {
	return fract(sin(dot(c.xy, vec2(12.9898,78.233))) * 43758.5453);
}

vec3 unpack_normal(vec4 rgba) {
	vec3 n = rgba.xzy * 2.0 - vec3(1.0);
	n.z *= -1.0;
	return n;
}

vec3 get_ambient_wind_displacement(vec2 uv, float hash) {
	// TODO This is an initial basic implementation. It may be improved in the future, especially for strong wind.
	float t = u_ambient_wind.y;
	float amp = u_ambient_wind.x * (1.0 - uv.y);
	// Main displacement
	vec3 disp = amp * vec3(cos(t), 0, sin(t * 1.2));
	// Fine displacement
	float fine_disp_frequency = 2.0;
	disp += 0.2 * amp * vec3(cos(t * (fine_disp_frequency + hash)), 0, sin(t * (fine_disp_frequency + hash) * 1.2));
	return disp;
}

void vertex() {
	vec4 obj_pos = WORLD_MATRIX * vec4(0, 1, 0, 1);
	vec3 cell_coords = (u_terrain_inverse_transform * obj_pos).xyz;
	// Must add a half-offset so that we sample the center of pixels,
	// otherwise bilinear filtering of the textures will give us mixed results (#183)
	cell_coords.xz += vec2(0.5);
	
	vec2 map_uv = cell_coords.xz / vec2(textureSize(u_terrain_heightmap, 0));
	v_map_uv = map_uv;

	//float density = 0.5 + 0.5 * sin(4.0*TIME); // test
	float density = texture(u_terrain_detailmap, map_uv).r;
	float hash = get_hash(obj_pos.xz);
	
	if (density > hash) {
		// Snap model to the terrain
		float height = texture(u_terrain_heightmap, map_uv).r / cell_coords.y;
		VERTEX *= u_instance_scale;
		VERTEX.y += height;
		
		VERTEX += get_ambient_wind_displacement(UV, hash);
		
		// Fade alpha with distance
		vec3 wpos = (WORLD_MATRIX * vec4(VERTEX, 1)).xyz;
		float dr = distance(wpos, CAMERA_MATRIX[3].xyz) / u_view_distance;
		COLOR.a = clamp(1.0 - dr * dr * dr, 0.0, 1.0);

		// When using billboards, the normal is the same as the terrain regardless of face orientation
		v_normal = normalize(u_terrain_normal_basis * unpack_normal(texture(u_terrain_normalmap, map_uv)));

	} else {
		// Discard, output degenerate triangles
		VERTEX = vec3(0, 0, 0);
	}
}

void fragment() {
	NORMAL = (INV_CAMERA_MATRIX * (WORLD_MATRIX * vec4(v_normal, 0.0))).xyz;
	ALPHA_SCISSOR = 0.5;
	ROUGHNESS = 1.0;

	vec4 col = texture(u_albedo_alpha, UV);
	ALPHA = col.a * COLOR.a;// - clamp(1.4 - UV.y, 0.0, 1.0);//* 0.5 + 0.5*cos(2.0*TIME);
	
	ALBEDO = COLOR.rgb * col.rgb;

	// Blend with ground color
	float nh = sqrt(1.0 - UV.y);
	ALBEDO = mix(ALBEDO, texture(u_terrain_globalmap, v_map_uv).rgb, mix(u_globalmap_tint_bottom, u_globalmap_tint_top, nh));
	
	// Fake bottom AO
	ALBEDO = ALBEDO * mix(1.0, 1.0 - u_bottom_ao, UV.y * UV.y);
}
"

[node name="Main" type="Spatial"]

[node name="Player" parent="." instance=ExtResource( 1 )]

[node name="HTerrain" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -256, 0, -256 )
script = ExtResource( 4 )
ambient_wind = 0.214
_terrain_data = ExtResource( 3 )
chunk_size = 32
collision_enabled = true
collision_layer = 1
collision_mask = 1
shader_type = "Classic4Lite"
custom_shader = null
custom_globalmap_shader = null
texture_set = SubResource( 4 )
shader_params/u_ground_uv_scale = 20
shader_params/u_depth_blending = true
shader_params/u_triplanar = false
shader_params/u_tile_reduction = Plane( 0, 0, 0, 0 )

[node name="Grass" type="Spatial" parent="HTerrain"]
script = ExtResource( 14 )
__meta__ = {
"_editor_icon": ExtResource( 15 )
}
texture = ExtResource( 13 )
view_distance = 200.0
custom_shader = SubResource( 5 )
shader_params/u_globalmap_tint_bottom = 0.118
shader_params/u_globalmap_tint_top = 0.031
shader_params/u_bottom_ao = 0.0
shader_params/u_instance_scale = Vector3( 1, 1, 2 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, -0.573576, 0.819152, 0, -0.819152, -0.573576, 0, 10, 0 )
light_color = Color( 0.992157, 0.952941, 0.752941, 1 )

[node name="Scatter3D" type="Spatial" parent="."]
script = ExtResource( 16 )
_scenes = [ ExtResource( 17 ) ]

[node name="BirchTree_1" type="Spatial" parent="Scatter3D" instance=ExtResource( 17 )]
transform = Transform( 0.881476, 0, -0.472228, 0, 1, 0, 0.472228, 0, 0.881476, 5.34288, 4.06511, 68.1446 )

[node name="BirchTree_2" type="Spatial" parent="Scatter3D" instance=ExtResource( 17 )]
transform = Transform( -0.988968, 0, 0.148127, 0, 1, 0, -0.148127, 0, -0.988968, 10.3142, 2.98172, 72.9443 )

[node name="BirchTree_3" type="Spatial" parent="Scatter3D" instance=ExtResource( 17 )]
transform = Transform( 0.643725, 0, 0.765257, 0, 1, 0, -0.765257, 0, 0.643725, 29.8369, 1.73368, 88.6046 )

[node name="BirchTree_4" type="Spatial" parent="Scatter3D" instance=ExtResource( 17 )]
transform = Transform( -0.713273, 0, 0.700886, 0, 1, 0, -0.700886, 0, -0.713273, 10.9675, 2.16695, 102.827 )

[node name="BirchTree_5" type="Spatial" parent="Scatter3D" instance=ExtResource( 17 )]
transform = Transform( 0.578077, 0, 0.815982, 0, 1, 0, -0.815982, 0, 0.578077, -8.28342, 3.69029, 107.025 )

[node name="BirchTree_6" type="Spatial" parent="Scatter3D" instance=ExtResource( 17 )]
transform = Transform( -0.375787, 0, 0.926706, 0, 1, 0, -0.926706, 0, -0.375787, -4.22794, 6.82731, 50.6616 )

[node name="BirchTree_7" type="Spatial" parent="Scatter3D" instance=ExtResource( 17 )]
transform = Transform( 0.953191, 0, 0.302368, 0, 1, 0, -0.302368, 0, 0.953191, -23.3606, 7.24033, 68.1823 )

[node name="BirchTree_8" type="Spatial" parent="Scatter3D" instance=ExtResource( 17 )]
transform = Transform( 0.329563, 0, 0.944134, 0, 1, 0, -0.944134, 0, 0.329563, -21.2382, 7.20597, 84.0211 )

[node name="BirchTree_9" type="Spatial" parent="Scatter3D" instance=ExtResource( 17 )]
transform = Transform( 0.774741, 0, 0.632279, 0, 1, 0, -0.632279, 0, 0.774741, -18.818, 6.37346, 93.1751 )
